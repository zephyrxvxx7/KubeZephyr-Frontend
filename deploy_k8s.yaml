apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubezephyr-frontend
  namespace: kubezephyr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubezephyr-frontend
  template:
    metadata:
      labels:
        app: kubezephyr-frontend
    spec:
      nodeSelector:
        kubernetes.io/hostname: zephyr-lab4
      containers:
        - name: kubezephyr-frontend
          image: zephyrxvxx7/kubezephyr_frontend:latest
          resources:
            requests:
              memory: '300Mi'
              cpu: '200m'
            limits:
              memory: '500Mi'
              cpu: '500m'
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: kubezephyr-frontend
  namespace: kubezephyr
spec:
  selector:
    app: kubezephyr-frontend
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubezephyr-frontend-ingress
  namespace: kubezephyr
  annotations:
    # Ingress Controller
    kubernetes.io/ingress.class: nginx
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    # cert-manager
    cert-manager.io/cluster-issuer: letsencrypt
    ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - kubezephyr.zephyr-kubernetes.tech
      secretName: kubezephyr-frontend-tls
  rules:
    - host: kubezephyr.zephyr-kubernetes.tech
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kubezephyr-frontend
                port:
                  number: 8080
